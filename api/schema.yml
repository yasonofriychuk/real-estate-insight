openapi: 3.0.3
servers:
  - url: 'https://127.0.0.1:8080'
info:
  version: 1.0.0
  title: Real estate insight
paths:
  /infrastructure/radius:
    get:
      summary: Search for infrastructure around the selected residential complex
      description: Search for infrastructure around the selected residential complex
      operationId: infrastructureRadiusBoard
      parameters:
        - name: developmentId
          in: query
          required: true
          schema:
            type: integer
            minimum: 0
        - name: radius
          in: query
          required: true
          schema:
            type: integer
            minimum: 1000
            maximum: 10000
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - objType
                    - coords
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    objType:
                      type: string
                    coords:
                      type: object
                      required:
                        - lat
                        - lon
                      properties:
                        lon:
                          type: number
                        lat:
                          type: number
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /developments/search/filter:
    post:
      operationId: developmentSearch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                searchQuery:
                  type: string
                pagination:
                  type: object
                  required:
                    - page
                    - perPage
                  properties:
                    page:
                      type: integer
                      default: 1
                    perPage:
                      type: integer
                      default: 10
                      maximum: 100
                      minimum: 1
                board:
                  type: object
                  required:
                    - topLeftLon
                    - topLeftLat
                    - bottomRightLon
                    - bottomRightLat
                  properties:
                    topLeftLon:
                      type: number
                    topLeftLat:
                      type: number
                    bottomRightLon:
                      type: number
                    bottomRightLat:
                      type: number
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - developments
                  - meta
                properties:
                  developments:
                    type: array
                    items:
                      $ref: "#/components/schemas/development"
                  meta:
                    type: object
                    required:
                      - total
                    properties:
                      total:
                        type: integer
                        format: int64
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /routes/build/points:
    get:
      summary: Build a route between points
      description: Build a route between points
      operationId: buildRoutesByPoints
      parameters:
        - name: developmentId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: osmId
          required: true
          in: query
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true # GeoJson
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

components:
  schemas:
    development:
      type: object
      required:
        - id
        - name
        - coords
        - imageUrl
        - description
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        coords:
          type: object
          required:
            - lat
            - lon
          properties:
            lat:
              type: number
            lon:
              type: number
        imageUrl:
          type: string
        description:
          type: string
    error:
      type: object
      required:
        - status
        - error
      properties:
        status:
          type: string
          enum:
            - not-found
            - bad-request
            - internal-error
            - unauthorized
        error:
          description: Ошибка
          type: object
          required:
            - code
            - message
          properties:
            code:
              description: Код ошибки
              type: integer
            message:
              description: Сообщение об ошибке
              type: string